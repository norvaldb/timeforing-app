name: Test Reports Only

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      checks: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run tests with coverage and reporting
      run: mvn clean install -B -Dnvd.api.key=${{ secrets.NVD_API_KEY }}
      env:
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
    
    # JaCoCo Coverage Report for PRs
    - name: Add coverage to PR
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.7.2
      with:
        paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 80
        min-coverage-changed-files: 80
        title: 'ðŸ§ª Code Coverage Report'
        update-comment: true
    
    # Generate and upload Allure report
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: target/allure-results
        allure_report: allure-report
        keep_reports: 5
    
    # Upload artifacts
    - name: Upload JaCoCo Coverage Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jacoco-coverage-${{ github.run_number }}
        path: target/site/jacoco/
        retention-days: 14
    
    - name: Upload Allure Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report-${{ github.run_number }}
        path: allure-report/
        retention-days: 14
    
    # Test Results Summary
    - name: Check for test result files
      id: check-tests
      run: |
        if [ -d "target/surefire-reports" ] && [ "$(find target/surefire-reports -name 'TEST-*.xml' | wc -l)" -gt 0 ]; then
          echo "surefire-exists=true" >> $GITHUB_OUTPUT
          echo "Found $(find target/surefire-reports -name 'TEST-*.xml' | wc -l) surefire test files"
        else
          echo "surefire-exists=false" >> $GITHUB_OUTPUT
          echo "No surefire test files found"
        fi
        
        if [ -d "target/failsafe-reports" ] && [ "$(find target/failsafe-reports -name 'TEST-*.xml' | wc -l)" -gt 0 ]; then
          echo "failsafe-exists=true" >> $GITHUB_OUTPUT
          echo "Found $(find target/failsafe-reports -name 'TEST-*.xml' | wc -l) failsafe test files"
        else
          echo "failsafe-exists=false" >> $GITHUB_OUTPUT
          echo "No failsafe test files found"
        fi
    
    - name: Publish Surefire Test Results
      uses: dorny/test-reporter@v2
      if: always() && steps.check-tests.outputs.surefire-exists == 'true'
      with:
        name: 'Unit Test Results'
        path: 'target/surefire-reports/TEST-*.xml'
        reporter: 'java-junit'
        fail-on-error: false
    
    - name: Publish Failsafe Test Results  
      uses: dorny/test-reporter@v2
      if: always() && steps.check-tests.outputs.failsafe-exists == 'true'
      with:
        name: 'Integration Test Results'
        path: 'target/failsafe-reports/TEST-*.xml'
        reporter: 'java-junit'
        fail-on-error: false
