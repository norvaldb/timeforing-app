-- Create users table with Oracle-specific features
CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR2(255) NOT NULL,
    status VARCHAR2(50) DEFAULT 'ACTIVE' NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    version NUMBER DEFAULT 1 NOT NULL,
    
    CONSTRAINT uk_users_email UNIQUE (email),
    CONSTRAINT ck_users_status CHECK (status IN ('ACTIVE', 'INACTIVE', 'PENDING', 'SUSPENDED'))
);

-- Create indexes for performance
CREATE INDEX idx_users_email ON users(email);
CREATE INDEX idx_users_status ON users(status);
CREATE INDEX idx_users_created_date ON users(created_date);

-- Create sequence for manual ID generation if needed
CREATE SEQUENCE users_seq START WITH 1000 INCREMENT BY 1;

-- Add comments for documentation
COMMENT ON TABLE users IS 'User accounts and profiles';
COMMENT ON COLUMN users.user_id IS 'Primary key - unique user identifier';
COMMENT ON COLUMN users.email IS 'User email address - must be unique';
COMMENT ON COLUMN users.status IS 'User account status';
COMMENT ON COLUMN users.created_date IS 'Timestamp when user was created';
COMMENT ON COLUMN users.updated_date IS 'Timestamp when user was last updated';
COMMENT ON COLUMN users.version IS 'Optimistic locking version';

-- Create trigger for automatic updated_date
CREATE OR REPLACE TRIGGER trg_users_updated_date
    BEFORE UPDATE ON users
    FOR EACH ROW
BEGIN
    :NEW.updated_date := CURRENT_TIMESTAMP;
    :NEW.version := :OLD.version + 1;
END;
/